;; load-ui-lib.lisp;; UI-Lib version 0.7; 4/5/96;; Provided for those who aren't using DEFSYSTEM. Stolen heavily from IFT.; Edit the value of *ui-lib-source-dir* for your site.;; Adam Alpern <aalpern@hampshire.edu>;(require :quickdraw)(require :resources)(defparameter *ui-lib-version*		"0.7")(defparameter *ui-lib-loaded-files* 	nil)(defparameter *ui-lib-source-dir* 	"projects;UI-Lib-0.7.1:source:")(defparameter *ui-lib-files*  '("system-75-windoid"    "rsrc"    "view-extensions"    "3DDrawing"    "3D-pop-up-menu"    "dialog-items"    "progress-indicator"    "pict-view")); compile-if-changed and load-if-changed stolen from make-ift.lisp(defun ui-compile-if-changed (file always)  (let* ((source (merge-pathnames file ".lisp"))         (fasl (merge-pathnames file #-powerpc ".fasl" #+powerpc ".pfsl")))    (unless (probe-file source)      (error "file not found: ~s" file))    (when (or always              (not (probe-file fasl))              (< (file-write-date fasl)                 (file-write-date source)))      (compile-file source :output-file fasl :verbose t))))(defun ui-load-if-changed (file always)  (ui-compile-if-changed file nil)  (let* ((fasl (merge-pathnames file #-powerpc ".fasl" #+powerpc ".pfsl"))         (date (file-write-date fasl))         (last-load (assoc file *ui-lib-loaded-files* :test #'equalp)))    (when (or always              (not last-load)              (< (cdr last-load)                 date))      (load fasl :verbose t)      (if last-load        (setf (cdr last-load) date)        (push (cons file date) *ui-lib-loaded-files*)))))(defun ui-lib-source-paths ()  (mapcar #'(lambda (filename)              (concatenate 'string *ui-lib-source-dir* filename))          *ui-lib-files*))(defun compile-ui-lib (&optional always)  (with-compilation-unit ()    (dolist (f (ui-lib-source-paths))      (ui-compile-if-changed f always))))(defun load-ui-lib ()  (with-compilation-unit ()    (dolist (f (ui-lib-source-paths))      (ui-load-if-changed f nil))))(load-ui-lib)(pushnew :ui-lib *features*)(provide :ui-lib)